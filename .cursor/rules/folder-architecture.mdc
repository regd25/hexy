---
description: 
globs: 
alwaysApply: true
---
# Hexy Folder Architecture Style Guide

## 1. Folder and File Naming Convention

- Use **kebab-case** for all folders and files.
  - ✅ `user-profile-service.ts`
  - ❌  `create-task.dto.ts`
  - ❌ `UserProfileService`
  - ❌ `createTaskDTO.ts`

## 2. Folder Structure Principles

- Structure by **bounded contexts**, not by technical layers globally.
- Within each context, organize using **Hexagonal Architecture**:
  - `domain/`
  - `application/`
  - `infrastructure/`

### Example

```
src/
  contexts/
    conversation/
      domain/
      application/
      infrastructure/
    user-management/
      domain/
      application/
      infrastructure/
```

## 3. Shared Modules

- Place reusable domain logic or utilities in the `shared/` folder.
- Follow the same structure inside `shared/` if complexity grows.

## 4. API and Interfaces

- Place HTTP or external interfaces in `api/`, organized by protocol (e.g., `rest/`, `graphql/`).

## 5. Test Organization

- Mirror the `src/` folder structure under `tests/`.
- Use `unit/` and `integration/` subfolders to differentiate types of tests.

## 6. Configuration Files

- Place general configurations under `config/`.
- Secrets and environment-specific data go into `.env` files or appropriate secret managers.

---

# Cursor Configuration Rules

These rules can be added to `.cursor-rules.json` or defined via team convention:

## File Organization

```json
{
  "folders": {
    "order": [
      "contexts",
      "shared",
      "api",
      "tests",
      "config"
    ],
    "group": true
  },
  "files": {
    "case": "kebab-case",
    "sort": "asc"
  }
}
```

## Auto-create Structure for New Bounded Contexts

- Automatically create:
  - `domain/`
  - `application/`
  - `infrastructure/`

## Autofix Suggestions

- Alert if a file or folder is not in kebab-case.
- Suggest `domain`, `application`, and `infrastructure` folders inside new context folders.

---

This guide ensures consistency, discoverability, and clean DDD boundaries throughout all Hexy-based projects.

